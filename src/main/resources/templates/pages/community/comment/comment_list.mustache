<!-- comment template -->
<div class="card card-widget" id="comment-card-widget">
    <div class="card-header">
        <h3 class="card-title"><i class="far fa-comments mr-1"></i>Comment ({{commentTotCnt}})</h3>
        <div class="card-tools">
            <!--<button type="button" class="btn btn-tool" data-toggle="tooltip" title="Mark as read">
            <i class="far fa-circle"></i></button>-->
            <button type="button" class="btn btn-tool" data-card-widget="collapse"><i class="fas fa-minus"></i>
            </button>
            <!--<button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i>
        </button>-->
        </div>
        <!-- /.card-tools -->
    </div>
    <!-- /.card-header-->

    {{#comments.content}}
    <!-- /.card-header -->
    <div class="card-footer card-comments">
        <div class="card-comment border-bottom">
            <div class="comment-text " style="margin-left:0;">
                <span class="username" style="margin-left:0;">
                    {{author}}
                    <button type="button" class="btn btn-outline-default btn-xs float-right" onclick="javascript:fn_v_toggle_comment_delete({{id}})"><i class="far fa-trash-alt"></i></button>
                    <span class="text-muted float-right">{{createdDate}}</span>
                </span><!-- /.username -->
                {{{text}}}
            </div>
            <!-- /.comment-text -->
            <div class="input-group input-group-sm mb-0" id="group-delete-comment{{id}}" style="display:none;">
                <div class="input-group mb-3">
                    <input type="password" class="form-control-sm" maxlength="10" placeholder="Password" id="delete-comment-password{{id}}" />
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-lock"></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="javascript:fn_v_confirm_comment_delete({{id}})"><i class="fas fa-pen-square"></i> 삭제</button>
                    <button type="button" class="btn btn-outline-default btn-sm" onclick="javascript:fn_v_cancel_comment_delete({{id}})"><i class="fas fa-window-close"></i></button>
                </div>
            </div>
        </div>
        <!-- /.card-comment -->
    </div>
    <!-- /.card-footer -->
    {{/comments.content}}

    <!-- /.card-footer Comment 입력 (로그인)-->
    <div class="card-footer">
        <form role="form" id="commentWriteForm">
            <input type="hidden" id="postId" name="postId" value="{{postId}}"/>
            <!-- .img-push is used to add margin to elements next to floating images -->
            <div class="input-group input-group-sm mb-0">
                <div class="input-group mb-3">
                    <textarea class="post-content" placeholder="" name="comment" id="comment"
                              style="width: 100%;"></textarea>
                </div>
                <p id="maxContentPost"></p>
                <div class="input-group">
                    <input type="password" class="form-control-sm" style="font-size:1rem;" maxlength="10" placeholder="Password" id="comment-password" />
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <span class="fas fa-lock"></span>
                        </div>
                    </div>
                    <div class="input-group-append float-right">
                        <div class="input-group-button">
                            <button type="button" class="btn btn-outline-info btn-sm" id="btn-comment-save"><i class="fas fa-pen-square"></i> 등록</button>
                        </div>
                    </div>
                </div>
                <p style="font-size:8px;">&nbsp;&nbsp;(댓글 삭제시 필요합니다)</p>
            </div>
        </form>
    </div>
</div>
        <!-- /.card card-widget -->


<script src="js/app/comment.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        //$('#comment-card-widget').CardWidget('toggle');         // 댓글 접기 토글
    });


    // TEXTAREA 최대값 체크
    function fn_TextAreaInputLimit(t) {
        var tempText = t;
        var tempChar = "";                                        // TextArea의 문자를 한글자씩 담는다
        var tempChar2 = "";                                        // 절삭된 문자들을 담기 위한 변수
        var countChar = 0;                                        // 한글자씩 담긴 문자를 카운트 한다
        var tempHangul = 0;                                        // 한글을 카운트 한다
        var maxSize = 400;                                        // 최대값

        // 글자수 바이트 체크를 위한 반복
        for(var i = 0 ; i < tempText.length; i++) {
            tempChar = tempText.charAt(i);

            // 한글일 경우 2 추가, 영문일 경우 1 추가
            if(escape(tempChar).length > 4) {
                countChar += 2;
                tempHangul++;
            } else {
                countChar++;
            }
        }
        console.log(countChar);
        // 카운트된 문자수가 MAX 값을 초과하게 되면 절삭 수치까지만 출력을 한다.(한글 입력 체크)
        // 내용에 한글이 입력되어 있는 경우 한글에 해당하는 카운트 만큼을 전체 카운트에서 뺀 숫자가 maxSize보다 크면 수행
        if(countChar > maxSize) {
            return true;
        }
        return false;
    }

    // TEXTAREA 최대값 까지 자르기
    function fn_getTextAreaInputLimit(t) {
        var tempText = t;
        var tempChar = "";                                        // TextArea의 문자를 한글자씩 담는다
        var tempChar2 = "";                                        // 절삭된 문자들을 담기 위한 변수
        var countChar = 0;                                        // 한글자씩 담긴 문자를 카운트 한다
        var tempHangul = 0;                                        // 한글을 카운트 한다
        var maxSize = 400;                                        // 최대값

        // 글자수 바이트 체크를 위한 반복
        for(var i = 0 ; i < tempText.length; i++) {
            tempChar = tempText.charAt(i);

            // 한글일 경우 2 추가, 영문일 경우 1 추가
            if(escape(tempChar).length > 4) {
                countChar += 2;
                tempHangul++;
            } else {
                countChar++;
            }

            if((countChar-tempHangul) > maxSize) {
                return tempText.substr(0, i -1);
            }
        }

        return tempText;
    }

    // 댓글 삭제
    function fn_v_confirm_comment_delete(commentId){
        var password = $("#delete-comment-password"+commentId ).val();

        var data = {
            commentId: commentId,
            password: $("#delete-comment-password"+commentId ).val(),
        };
        var postId = $('#postId').val();
        if(!data.password.trim()){
            alert("비밀번호을 입력하세요.");
            return;
        }

        $.ajax({
            type: 'DELETE',
            url: '/api/v1/post/'+ postId + '/comments/' + commentId ,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(data)
        }).done(function(){
            //alert('삭제되었습니다.');
            //window.location.href = '/community';
        }).fail(function (error) {
            if(error.status == 200){
                alert('삭제되었습니다.');
                var postId = $('#postId').val();
                fm_v_get_comments(postId);
            } else if(error.status == 999){
                alert('비밀번호가 틀립니다.');
            } else {
                alert('죄송합니다. 오류가 발생하였습니다!');
                //alert(JSON.stringify(error));
            }
        });
    };

    // 삭제 버튼 클릭 이벤트 핸들러
    function fn_v_toggle_comment_delete(commentId){
        $( "#group-delete-comment"+commentId ).show();
    };

    // 삭제 버튼 취소 클릭 이벤트 핸들러
    function fn_v_cancel_comment_delete(commentId){
        $( "#group-delete-comment"+commentId ).hide();
    };

    // 댓글 리스트 다시 조회
    function fm_v_get_comments(postId){
        var ajaxUrl = "/api/v1/post/" + postId + "/comments";

        $.ajax({
            type: "GET",
            url: ajaxUrl,
            success: function(response) {
                $("#comment-target").html( response );
            }
        });
    };
</script>
<!-- Summernote -->
<script src="plugins/summernote/summernote-bs4.min.js"></script>
<script>
    var isMobile = false; //initiate as false
    // device detection
    if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)
        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) {
        isMobile = true;
    }


function registerSummernote(element, placeholder, max, callbackMax) {
    $(element).summernote({
      toolbar: [
          ['font', ['bold', 'underline', 'clear']],
          ['insert', ['link', 'hr']],
          ['view', ['fullscreen', 'help']],
      ],
      height: 100,   //set editable area's height
      lang : 'ko-KR',
      shortcuts : !isMobile ,
      placeholder: placeholder,
      callbacks: {
        onImageUpload : function(files, editor, welEditable) {
           v_fn_sendFile(files[0], editor, welEditable);
        },
        /*
        onKeydown: function(e) {
          var t = e.currentTarget.innerText;
          var overMax = fn_TextAreaInputLimit(t);
          var key = e.keyCode;
          allowed_keys = [8, 37, 38, 39, 40, 46, 18];

          if($.inArray(key, allowed_keys) != -1){
            return true;
          } else if(overMax){
            alert("최대 글자수를 초과하였습니다.");
            e.preventDefault();
            e.stopPropagation();
          }

          if (typeof callbackMax == 'function') {
            callbackMax(t);
          }

        }
        */
      }
    });
  }
    // summernote 에디터에 이미지 업로드
    function v_fn_sendFile(file,editor,welEditable) {
        setTimeout(function(){
            main.checkImageTag()
        }, 100);
        return false;
    }

  $(function () {
    registerSummernote('#comment', '소중한 의견 남겨주세요...', 400, function(max) {
        $('#maxContentPost').text(max)
    });
    $('.note-editor').css({"width": '100%'});
  });
</script>
buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
        mooworkVersion = '1.3.1'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:${mooworkVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'


group 'com.vegecipe.com'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    /*compile('org.springframework.boot:spring-boot-starter-thymeleaf')*/
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.projectlombok:lombok')
    compile('org.springframework.session:spring-session-jdbc')
    compile('com.h2database:h2')
    compile('org.mariadb.jdbc:mariadb-java-client')
    compile("org.springframework.boot:spring-boot-devtools")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')

}


/*
node {
    // Version of node to use.
    version = '10.14.1'
    // Version of npm to use.
    npmVersion = '6.4.1'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}
*/

/*
npm_run_build {
    //inputs.file 'node_modules/.bin/webpack'
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
    inputs.file("webpack.config.js")
    outputs.cacheIf { true }
}
assemble.dependsOn npm_run_build
*/

//task npm_run_build(type: Exec) {
//    inputs.file("package.json")
//    inputs.file("package-lock.json")
//    //outputs.dir("$buildDir/build")
//
//    // NOTE: Add inputs.file("webpack.config.js") for projects that have it
//    inputs.file("webpack.config.js")
//    commandLine "$projectDir/node_modules/.bin/webpack"
//}

//
//
//task buildReactApp(type: NodeTask, dependsOn: 'npmInstall') {
//    script = project.file('node_modules/.bin/webpack-dev-server')
//    args = [
//            '--mode', 'development',
//            '--entry', './src/main/js/app.js',
//            '-o', './src/main/resources/static/built/bundle.js'
//    ]
//}
//
//processResources.dependsOn 'buildReactApp'

//clean.delete << file('node_modules')
//clean.delete << file('src/main/resources/static/built')